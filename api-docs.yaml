openapi: 3.0.0
info:
  title: 'TUSUR API'
  description: 'Swagger OpenApi description'
  version: '1.0'
servers:
  -
    url: 'http://localhost'
paths:
  '/api/v1/bid/{id}':
    get:
      tags:
        - Bid
      summary: 'Получает сущность по id'
      description: 'Возвращает приглашение по id.'
      operationId: a4aefabb8018450aa938c99737a69203
      parameters:
        -
          name: id
          in: path
          description: 'ID сущности'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Bid'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/bid/project/{id}':
    get:
      tags:
        - Bid
      summary: 'Получает список заявок на проект'
      description: 'Возвращает заявки на проект.'
      operationId: 97381aa6957a4c987f3d45f2fb2edfc9
      parameters:
        -
          name: id
          in: path
          description: 'ИД проекта'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/BidShortList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  '/api/v1/bid/student/{contingentPersonId}':
    get:
      tags:
        - Bid
      summary: 'Получает список заявок определенного студента'
      description: 'Возвращает заявки студента.'
      operationId: 24e7ed483a775ecda5301b1eee65818c
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/BidShortList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  /api/v1/bid:
    post:
      tags:
        - Bid
      summary: 'Создаёт заявку от студента.'
      description: 'Создаёт заявку студента.'
      operationId: 692ecf754cc7d650afa2dc7b9934c460
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Bid'
                type: object
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/company:
    get:
      tags:
        - Company
      summary: 'Получает список компаний с учетом пагинации'
      description: 'Метод получения списка компаний.'
      operationId: 1fc207ff4fce3044f9c7a9a614438553
      parameters:
        -
          name: page
          in: query
          description: 'Номер страницы'
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/company/{id}/full':
    get:
      tags:
        - Company
      summary: 'Получает полную информацию о компании по id'
      description: 'Метод получения полного профиля компании по id.'
      operationId: 663b0536d52220ff956177d58faa68ae
      parameters:
        -
          name: id
          in: path
          description: 'ID компании'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyFull'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/company/{id}':
    get:
      tags:
        - Company
      summary: 'Получает публичную информацию о компании по id'
      description: 'Метод получения публичного профиля компании по id.'
      operationId: 2cd2a20b54910858f4774e40712adb61
      parameters:
        -
          name: id
          in: path
          description: 'ID компании'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyPublic'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  /api/v1/competence:
    get:
      tags:
        - Competency
      summary: 'Получает список навыков'
      description: 'Метод получения списка навыков.'
      operationId: 993cc52536093c3fc8eca3898a197a85
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CompetencyList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/competence/{id}':
    get:
      tags:
        - Competency
      summary: 'Получает навык по id'
      description: 'Возвращает запись по id.'
      operationId: f9767d124a4ed1d5f822e1ad4a6acb4e
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Competency'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/invite/{id}':
    get:
      tags:
        - Invite
      summary: 'Получает приглашение по id'
      description: 'Возвращает приглашение по id.'
      operationId: 623d3a572fdeb0bf22868ab279e92bb3
      parameters:
        -
          name: id
          in: path
          description: 'ID сущности'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/InviteStudent'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/invite/student/{contingentPersonId}':
    get:
      tags:
        - Invite
      summary: 'Возвращает список приглашений для студента'
      description: 'Возвращает список приглашений (краткий) для студента.'
      operationId: c004ca9d3e5e409ae42b75541be26e04
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/InviteShortList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  '/api/v1/invite/company/{id}':
    get:
      tags:
        - Invite
      summary: 'Возвращает список приглашений компании'
      description: 'Возвращает список приглашений (краткий) компании.'
      operationId: 4ecad5dcc99abcad727623594089924d
      parameters:
        -
          name: id
          in: path
          description: 'ИД компании'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/InviteShortList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  /api/v1/invite:
    post:
      tags:
        - Invite
      summary: 'Создаёт приглашение для студента.'
      description: 'Создаёт заявку студента.'
      operationId: 0ec3004d6b8988e34541576489d46797
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/InviteStudent'
                type: object
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/member-review/{id}':
    get:
      tags:
        - MemberReview
      summary: 'Получает отзыв по id'
      description: 'Возвращает отзыв по id.'
      operationId: 9f45f2a486c8770ea287e39795546c14
      parameters:
        -
          name: id
          in: path
          description: 'ID отзыва'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MemberReview'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/member-review/student/{contingentPersonId}':
    get:
      tags:
        - MemberReview
      summary: 'Получает список отзывов о студенте по contingentPersonId'
      description: 'Возвращает отзывы о студенте.'
      operationId: 10eec596dbca0d4477f0c7766d803723
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MemberReviewList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  '/api/v1/member-review/student/{contingentPersonId}/count':
    get:
      tags:
        - MemberReview
      summary: 'Получает количество отзывов о студенте и среднюю оценку по contingentPersonId'
      description: 'Возвращает количество отзывов о студенте и среднюю оценку.'
      operationId: 6aa2b3a8091d9bcf2075737a1a8c3dd4
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MemberReviewCount'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  /api/v1/project:
    get:
      tags:
        - Project
      summary: 'Получает общий список проектов с возможностью фильтровать'
      description: 'Метод получения общего списка проектов.'
      operationId: 730a1391eb4ed21a85e25bcf300ab2a9
      parameters:
        -
          name: page
          in: query
          description: 'Номер страницы'
          required: false
          schema:
            type: integer
        -
          name: name
          in: query
          description: 'Название проекта/компании'
          required: true
          schema:
            type: string
        -
          name: 'statusIds[]'
          in: query
          description: 'Массив ид статусов проекта'
          schema:
            type: array
            items:
              type: integer
          example: 'statusIds[]=1&statusIds[]=2'
        -
          name: 'roleIds[]'
          in: query
          description: 'Массив ид ролей на проекте'
          schema:
            type: array
            items:
              type: integer
          example: 'roleIds[]=1&roleIds[]=2'
        -
          name: 'workFormatIds[]'
          in: query
          description: 'Массив ид форматов работы на проекте'
          schema:
            type: array
            items:
              type: integer
          example: 'workFormatIds[]=1&workFormatIds[]=2'
        -
          name: 'typeIds[]'
          in: query
          description: 'Массив ид типов проекта'
          schema:
            type: array
            items:
              type: integer
          example: 'typeIds[]=1&typeIds[]=2'
        -
          name: 'subjectIds[]'
          in: query
          description: 'Массив ид предметных областей'
          schema:
            type: array
            items:
              type: integer
          example: 'subjectIds[]=1&subjectIds[]=2'
        -
          name: 'competencyIds[]'
          in: query
          description: 'Массив ид навыков получаемых в роли на проекте'
          schema:
            type: array
            items:
              type: integer
          example: 'competencyIds[]=1&competencyIds[]=2'
        -
          name: 'viewIds[]'
          in: query
          description: 'Массив ид видов проекта'
          schema:
            type: array
            items:
              type: integer
          example: 'viewIds[]=1&viewIds[]=2'
        -
          name: duration
          in: query
          description: 'Продолжительность проекта в днях, от и до'
          schema:
            type: string
          example: 'duration=14,60'
        -
          name: companyId
          in: query
          description: 'ИД компании'
          schema:
            type: integer
          example: companyId=2
        -
          name: limit
          in: query
          description: 'Количество сущностей на страницу'
          schema:
            type: int
          example: limit=2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/project/company/{id}':
    get:
      tags:
        - Project
      summary: 'Получает список проектов компании'
      description: 'Метод получения списка проектов компании.'
      operationId: 30db8eadbe97744fe80e5220e9ed2ede
      parameters:
        -
          name: id
          in: path
          description: 'ИД компании'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/project/student/{contingentPersonId}':
    get:
      tags:
        - Project
      summary: 'Получает список проектов студента по id'
      description: 'Метод получения списка собственных проектов студента.'
      operationId: e545f5d68a08de48a478392401e76bec
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        403:
          $ref: '#/components/responses/Forbidden'
  '/api/v1/project/{id}/full':
    get:
      tags:
        - Project
      summary: 'Получает полную информацию о проекте по id'
      description: 'Метод получения полного профиля проекта по id.'
      operationId: 38e39bda6d941b5cf8c32ad6036bd8c2
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectFull'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/project/{id}':
    get:
      tags:
        - Project
      summary: 'Получает публичную информацию о проекте по id'
      description: 'Метод получения публичного профиля проекта по id.'
      operationId: e67dbe72e60f4df4f8102ddabf7b216b
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectPublic'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/project/{id}/similar':
    get:
      tags:
        - Project
      summary: 'Получает список подобных проектов по предметным областям'
      description: 'Метод получения подобных проектов по предметным областям.'
      operationId: 5df8919fc046ea6f3af9a14a7b509a83
      parameters:
        -
          name: id
          in: path
          description: 'ИД проекта'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectList'
                type: object
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/project/company/{companyId}/status':
    get:
      tags:
        - Project
      summary: 'Получает количество проектов компании в статусе: Идет набор'
      description: 'Возвращает количество проектов компании в статусе: Идет набор.'
      operationId: 747e376f2375ec59a6ec1b068573e945
      parameters:
        -
          name: companyId
          in: path
          description: 'ID компании'
          required: true
          schema:
            type: integer
          example: 1
        -
          name: 'statusIds[]'
          in: query
          description: 'Массив ид статусов'
          required: true
          schema:
            type: array
            items:
              type: integer
            minItems: 1
          example:
            - 1
            - 2
            - 3
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Count'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  /api/v1/role:
    get:
      tags:
        - Role
      summary: 'Получает список ролей для проекта'
      description: 'Метод получения списка сущностей.'
      operationId: 75d7ea6fd6976077763f4c260e505150
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/RoleList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/role/{id}':
    get:
      tags:
        - Role
      summary: 'Получает роль по id'
      description: 'Возвращает запись по id.'
      operationId: 69e810dd20c1a95c2e32aabce27cfea0
      parameters:
        -
          name: id
          in: path
          description: 'ID роли'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Role'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student/{contingentPersonId}':
    get:
      tags:
        - Student
      summary: 'Получает профиль студента по ID в системе аутентификации ТУСУР'
      description: 'Возвращает запись по id.'
      operationId: 1ea955f0c1093596e69bbf66881ceaa4
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Student'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Student
      summary: 'Удаляет профиль студента по ID в системе аутентификации ТУСУР'
      description: 'Удаляет запись по id.'
      operationId: 97c4d6ab149142735fb324848c40e23c
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - message
                properties:
                  message:
                    $ref: '#/components/schemas/OperationResultMessage'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student/{contingentPersonId}/about':
    patch:
      tags:
        - Student
      summary: 'Редактирует о себе студента по ID'
      description: 'Редактирует запись по id.'
      operationId: ca0d302aac1781061b52684d06b2ffd8
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAboutForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Student'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student/{contingentPersonId}/feedback':
    patch:
      tags:
        - Student
      summary: 'Редактирует показывать ли полностью отзывы студента по ID'
      description: 'Редактирует запись по id.'
      operationId: 0db3aeef3bcb2d1a59d7722508ccb2df
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentIsFullFeedbackForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Student'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student/{contingentPersonId}/competencies':
    patch:
      tags:
        - Student
      summary: 'Редактирует компетенции студента по ID'
      description: 'Редактирует запись по id.'
      operationId: 68fcf53753e015c866af09d94a235c70
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCompetenciesForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Student'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student/{contingentPersonId}/subject-areas':
    patch:
      tags:
        - Student
      summary: 'Редактирует предметные области студента по ID'
      description: 'Редактирует запись по id.'
      operationId: f08cafef8857ec6b8f17404d6c73d234
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSubjectAreasForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Student'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student/{contingentPersonId}/upload-resume':
    post:
      tags:
        - Student
      summary: 'Загружает резюме студента'
      description: 'Загружает резюме студента.'
      operationId: a58a3c36d69a2fcbb4b0c0d661c54206
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentUploadResumeForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/StudentResumeFieldForm'
                type: object
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/student/{contingentPersonId}/remove-resume':
    post:
      tags:
        - Student
      summary: 'Удаляет резюме студента'
      description: 'Удаляет резюме студента.'
      operationId: d13a256f6b4b74f968a13a31b979652c
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'Id студента в системе ТУСУР'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/StudentResumeFieldForm'
                type: object
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/student-report/{id}':
    get:
      tags:
        - StudentReport
      summary: 'Получает сущность по id'
      description: 'Отдает файл на скачивание по Id записи.'
      operationId: cdbc12dc23c15de178e8513c4bbf711a
      parameters:
        -
          name: id
          in: path
          description: 'ID сущности'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: 'File download'
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/student-report/{contingentPersonId}':
    get:
      tags:
        - StudentReport
      summary: 'Получает список отчетов студента'
      description: 'Возвращает все отчеты студента.'
      operationId: 7acd76dd5b5d226930978d0547f22fea
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/StudentReportList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  '/api/v1/student-report/{contingentPersonId}/waiting':
    get:
      tags:
        - StudentReport
      summary: 'Получает список отчетов которые студент должен сдать'
      description: 'Возвращает отчеты студента требующие сдачи.'
      operationId: e32d29800210b15f7e9cc33878dd177c
      parameters:
        -
          name: contingentPersonId
          in: path
          description: 'ИД студента'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/StudentReportWaiting'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  /api/v1/subject-area:
    get:
      tags:
        - SubjectArea
      summary: 'Получает список предметных областей'
      description: 'Метод получения списка предметных областей.'
      operationId: 68222e08196331b89f861e8bc7d64782
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SubjectAreaList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/subject-area/{id}':
    get:
      tags:
        - SubjectArea
      summary: 'Получает предметную область по id'
      description: 'Возвращает запись по id.'
      operationId: 3d210571f09379c6978d6adf06b02ee0
      parameters:
        -
          name: id
          in: path
          description: 'ID предметной области'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SubjectArea'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/subscriber/company/{companyId}':
    get:
      tags:
        - CompanySubscriber
      summary: 'Получает количество подписчиков на компанию'
      description: 'Возвращает количество подписчиков на компанию.'
      operationId: 81bcc95c06c170ae028afb4e1c192d5b
      parameters:
        -
          name: companyId
          in: path
          description: 'ID компании'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Count'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
  /api/v1/type-activity:
    get:
      tags:
        - TypeActivity
      summary: 'Возвращает список видов деятельности'
      description: 'Метод получения списка видов деятельности.'
      operationId: 3d0c8b9a39d8bd5bb6e0578ac85ab0f8
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TypeActivityList'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        404:
          $ref: '#/components/responses/NotFound'
  '/api/v1/type-activity/{id}':
    get:
      tags:
        - TypeActivity
      summary: 'Возвращает вид деятельности по его ID'
      description: 'Возвращает запись по id.'
      operationId: 2780d99e7691e8692fcc981069f9df54
      parameters:
        -
          name: id
          in: path
          description: 'ID вида деятельности'
          required: true
          schema:
            type: integer
          example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TypeActivity'
                type: object
        500:
          $ref: '#/components/responses/InternalServerError'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    OperationResultMessage:
      title: 'Результат выполнения операции'
      type: string
      example: 'Запись успешно отредактирована'
    BidForm:
      title: 'Студент. Форма заявки на проект'
      required:
        - roleId
        - about
        - reason
        - experience
      properties:
        roleId:
          description: 'ИД роли'
          type: integer
        about:
          description: 'О себе'
          type: string
        reason:
          description: 'Чем можете помочь на проекте'
          type: string
        experience:
          description: 'О вашем опыте'
          type: string
      type: object
    InviteForm:
      title: 'Компания. Форма приглашения на проект'
      required:
        - contingentPersonId
        - roleId
        - text
      properties:
        contingentPersonId:
          description: 'ИД студента'
          type: integer
        roleId:
          description: 'ИД роли'
          type: integer
        text:
          description: 'Текст приглашения'
          type: string
      type: object
    StudentUploadResumeForm:
      title: 'Студент. Форма загрузки резюме'
      required:
        - resume
      properties:
        resume:
          description: 'Файл резюме'
          type: string
          format: binary
      type: object
    StudentResumeFieldForm:
      title: 'Студент. Данные резюме'
      required:
        - resume
        - resumePath
      properties:
        resume:
          description: 'Название файла резюме'
          type: string
          example: Петров(резюме).pdf
          nullable: true
        resumePath:
          description: 'Файл резюме'
          type: string
          example: 'http://tusur-marketplace.local/storage/students/2023/01/dhvIwXL295i5I.pdf'
          nullable: true
      type: object
    StudentAboutForm:
      title: 'Студент. Форма редактирования о себе'
      required:
        - about
      properties:
        about:
          description: 'О себе'
          type: string
      type: object
    StudentIsFullFeedbackForm:
      title: 'Студент. Форма редактирования показывать ли полностью отзывы'
      required:
        - isFullFeedback
      properties:
        isFullFeedback:
          description: 'Показывать ли полностью отзывы'
          type: boolean
      type: object
    StudentCompetenciesForm:
      title: 'Студент. Форма редактирования компетенций'
      required:
        - competencies
      properties:
        competencies:
          description: Компетенции
          type: array
          items:
            $ref: '#/components/schemas/Competency'
      type: object
    StudentSubjectAreasForm:
      title: 'Студент. Форма редактирования предметных областей'
      required:
        - subjectAreas
      properties:
        subjectAreas:
          description: 'Предметная область'
          type: array
          items:
            $ref: '#/components/schemas/SubjectArea'
      type: object
    Bid:
      title: 'Сущность заявки'
      required:
        - status
        - roleName
        - project
        - contingentPersonId
        - about
        - experience
        - reason
        - refusalReason
        - createdAt
      properties:
        status:
          $ref: '#/components/schemas/BidStatus'
        roleName:
          description: 'Название роли'
          type: string
        project:
          $ref: '#/components/schemas/Project'
        contingentPersonId:
          description: 'ИД студента'
          type: integer
          example: 123456789
        about:
          description: 'О себе'
          type: string
        experience:
          description: 'Об опыте'
          type: string
        reason:
          description: 'Мотивация на заявку'
          type: string
        refusalReason:
          description: 'Причина отказа'
          type: string
          nullable: true
        createdAt:
          description: 'Дата создания'
          type: string
          format: date
          example: '2023-03-03'
      type: object
    BidShort:
      title: 'Сущность заявки короткая'
      required:
        - status
        - roleName
        - projectName
        - contingentPersonId
        - createdAt
        - companyName
      properties:
        status:
          $ref: '#/components/schemas/BidStatus'
        roleName:
          description: 'Название роли'
          type: string
        projectName:
          description: 'Название проекта'
          type: string
        contingentPersonId:
          description: 'ИД студента'
          type: integer
          example: 123456789
        createdAt:
          description: 'Дата создания'
          type: string
          format: date
          example: '2023-03-03'
        companyName:
          description: 'Название компании'
          type: string
          example: 'ГК Точка'
      type: object
    BidShortList:
      title: 'Краткая информация по заявкам'
      type: array
      items:
        $ref: '#/components/schemas/BidShort'
    BidStatus:
      title: 'Информация о статусе заявки'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          example: 1
        name:
          description: Название
          type: string
          example: Новая
      type: object
    CompanyFull:
      title: 'Компания. Полная информация'
      required:
        - id
        - email
        - name
        - hasAccreditation
        - site
        - typeActivities
        - employeeCount
        - description
        - logo
        - status
        - reasonRejection
      properties:
        id:
          description: Id
          type: integer
          example: 1
        email:
          description: Email
          type: string
          example: sdffs@a22sd.ru
        name:
          description: Название
          type: string
          maxLength: 30
          example: 'ЗАО ОмскКреп'
        inn:
          description: ИНН
          type: integer
          maxLength: 12
          minLength: 10
          example: '486771018658'
        hasAccreditation:
          description: 'Имеет ли аккредитацию'
          type: boolean
          example: true
        site:
          description: 'Сайт компании'
          type: string
          maxLength: 255
          example: 'https://www.google.com/'
        typeActivities:
          $ref: '#/components/schemas/TypeActivityList'
        employeeCount:
          description: 'Количество сотрудников'
          type: string
          enum:
            - '<20'
            - 21-50
            - 51-100
            - '>100'
          nullable: true
        description:
          description: 'Описание компании'
          type: string
          example: Описание
        logo:
          description: 'Логотип компании'
          type: string
          example: 'https://storage.tusur.ru/files/155323/02.png'
        status:
          description: Статус
          type: string
          enum:
            - Новая
            - Активна
            - 'На модерации'
            - 'На удалении'
            - Удалена
            - Заблокирована
          example: Заблокирована
        reasonRejection:
          description: 'Причина отказа'
          type: string
          example: 'Причина отказа'
        contacts:
          $ref: '#/components/schemas/ContactList'
      type: object
    Company:
      title: 'Компания. Информация для каталога'
      required:
        - id
        - name
        - hasAccreditation
        - typeActivities
        - logo
      properties:
        id:
          description: Id
          type: integer
        name:
          description: Название
          type: string
          maxLength: 30
        hasAccreditation:
          description: 'Имеет ли аккредитацию'
          type: boolean
        logo:
          description: 'Логотип компании'
          type: string
        typeActivities:
          $ref: '#/components/schemas/TypeActivityList'
      type: object
    CompanyList:
      title: 'Список компаний для каталога'
      type: array
      items:
        $ref: '#/components/schemas/Company'
      example:
        -
          id: 2
          name: Название2
          hasAccreditation: false
          typeActivities:
            -
              id: 1
              name: Название1
          logo: url
    CompanyPublic:
      title: 'Компания. Публичная информация'
      required:
        - id
        - name
        - hasAccreditation
        - site
        - typeActivities
        - description
        - logo
      properties:
        id:
          description: Id
          type: integer
        name:
          description: Название
          type: string
          maxLength: 30
        hasAccreditation:
          description: 'Имеет ли аккредитацию'
          type: boolean
        site:
          description: 'Сайт компании'
          type: string
          maxLength: 255
        typeActivities:
          $ref: '#/components/schemas/TypeActivityList'
        description:
          description: 'Описание компании'
          type: string
        logo:
          description: 'Логотип компании'
          type: string
      type: object
      example:
        id: 2
        name: Название2
        hasAccreditation: false
        site: test2.com
        typeActivities:
          -
            id: 1
            name: Название1
        description: Описание
        logo: url
    CompanyShort:
      title: 'Компания. Краткая информация'
      required:
        - id
        - name
        - logo
      properties:
        id:
          description: Id
          type: integer
          example: 2
        name:
          description: Название
          type: string
          maxLength: 30
          example: 'Название компании'
        logo:
          description: 'Логотип компании'
          type: string
          example: 'https://storage.tusur.ru/files/155323/02.png'
      type: object
    CompanyShortList:
      title: 'Список компаний. Краткая информация'
      type: array
      items:
        $ref: '#/components/schemas/CompanyShort'
      example:
        -
          id: 1
          name: Название1
          logo: 'https://storage.tusur.ru/files/155323/02.png'
        -
          id: 2
          name: Название2
          logo: 'https://storage.tusur.ru/files/155323/02.png'
    Competency:
      title: 'Сущность навыка'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Название 1'
      type: object
    CompetencyList:
      title: 'Список сущностей навыков'
      type: array
      items:
        $ref: '#/components/schemas/Competency'
      example:
        -
          id: 1
          name: Название1
        -
          id: 2
          name: Название2
    Contact:
      title: 'Контактное лицо'
      required:
        - id
        - fio
        - position
        - phone
        - email
        - telegram
        - communicationType
      properties:
        id:
          description: Id
          type: integer
          example: 1
        fio:
          description: ФИО
          type: string
          maxLength: 50
          example: 'Шилова Данила Евгеньевич'
        position:
          description: Должность
          type: string
          maxLength: 255
          example: Менеджер
        phone:
          description: 'Номер телефона'
          type: string
          maxLength: 255
          example: (911)111-11-11
        email:
          description: Email
          type: string
          maxLength: 255
          example: 'olesa.golubev@yandex.ru '
        telegram:
          description: Название
          type: string
          maxLength: 255
          example: '@rozalina27'
        communicationType:
          description: 'Желаемый вид связи'
          type: string
          enum:
            - phone
            - email
            - telegram
          example: phone
      type: object
    ContactList:
      title: 'Список контактных лиц компании'
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    Count:
      title: 'Количество записей'
      required:
        - count
      properties:
        count:
          description: 'Количество найденных записей'
          type: integer
          example: '37'
      type: object
    CommonError:
      title: 'Сущность общей ошибки'
      required:
        - detail
        - code
      properties:
        detail:
          description: 'Описание возникшей ошибки'
          type: string
          example: 'Неверная комбинация логина и пароля'
        code:
          description: 'Код ошибки'
          type: string
          example: errorAuth
      type: object
    ValidationError:
      title: 'Сущность ошибки валидации входных данных'
      allOf:
        -
          $ref: '#/components/schemas/CommonError'
        -
          required:
            - detail
            - code
          properties:
            field:
              description: 'Название поля с ошибкой'
              type: string
              example: password
          type: object
    ErrorList:
      title: 'Сущность списка ошибки'
      required:
        - errors
      properties:
        errors:
          description: 'Список возникших ошибок'
          type: array
          items:
            anyOf:
              -
                $ref: '#/components/schemas/CommonError'
              -
                $ref: '#/components/schemas/ValidationError'
      type: object
    InviteCompany:
      title: 'Сущность приглашения, вид для компании'
      required:
        - status
        - text
        - roleName
        - projectId
        - projectName
        - student
        - createdAt
      properties:
        status:
          $ref: '#/components/schemas/InviteStatus'
        text:
          description: 'Текст приглашения (комментарий)'
          type: string
          example: 'Приглашаем вас на проект'
        roleName:
          description: 'Название роли'
          type: string
        projectId:
          description: 'ИД проекта'
          type: integer
        projectName:
          description: 'Название проекта'
          type: string
        student:
          $ref: '#/components/schemas/Student'
        createdAt:
          description: 'Дата создания'
          type: string
          format: date
          example: '2023-03-03'
      type: object
    InviteCompanyList:
      title: 'Список сущностей'
      type: array
      items:
        $ref: '#/components/schemas/InviteCompany'
    InviteShort:
      title: 'Сущность приглашения короткая'
      required:
        - id
        - status
        - projectName
        - roleName
        - companyName
        - contingentPersonId
        - createdAt
      properties:
        id:
          description: ИД
          type: integer
        status:
          $ref: '#/components/schemas/InviteStatus'
        projectName:
          description: 'Название проекта'
          type: string
          example: 'Разработка станции Алиса Про'
        roleName:
          description: 'Роль на проекте'
          type: string
          example: 'Front vue developer'
        contingentPersonId:
          description: 'ИД студента'
          type: integer
          example: 123456789
        companyName:
          description: 'Название компании'
          type: string
          example: ТрансТомскГаз
        createdAt:
          description: 'Дата создания'
          type: string
          format: date
          example: '2023-03-03'
      type: object
    InviteShortList:
      title: 'Список сущностей'
      type: array
      items:
        $ref: '#/components/schemas/InviteShort'
    InviteStatus:
      title: 'Информация о статусе приглашения'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          example: 1
        name:
          description: Название
          type: string
          example: Новое
      type: object
    InviteStudent:
      title: 'Сущность приглашения, вид для студента'
      required:
        - status
        - projectId
        - projectName
        - projectDesc
        - whatWillGet
        - role
        - text
        - createdAt
      properties:
        id:
          description: 'ИД приглашения'
          type: integer
        status:
          $ref: '#/components/schemas/InviteStatus'
        projectId:
          description: 'Проекта ИД'
          type: integer
        projectName:
          description: 'Проекта название'
          type: string
        projectDesc:
          description: 'Проекта описание'
          type: string
        whatWillGet:
          description: 'Что получит студент на проекте'
          type: string
        role:
          $ref: '#/components/schemas/ProjectRole'
        company:
          $ref: '#/components/schemas/Company'
        text:
          description: 'Текст приглашения (комментарий)'
          type: string
          example: 'Приглашаем вас на проект'
        createdAt:
          description: 'Дата создания'
          type: string
          format: date
          example: '2023-03-03'
      type: object
    InviteStudentList:
      title: 'Список сущностей'
      type: array
      items:
        $ref: '#/components/schemas/InviteStudent'
    Member:
      title: 'Член команды'
      required:
        - contingentPersonId
        - roleId
      properties:
        contingentPersonId:
          description: 'Ид студента в системе ТУСУР'
          type: integer
          example: 1
        roleId:
          description: 'Ид роли'
          type: integer
          example: 1
        review:
          $ref: '#/components/schemas/MemberReviewShort'
      type: object
    MemberList:
      title: 'Сущность команда'
      type: array
      items:
        $ref: '#/components/schemas/Member'
    MemberReviewCount:
      title: 'Количество отзывов о студенте со средней оценкой'
      required:
        - count
        - score
      properties:
        count:
          description: 'Количество отзывов'
          type: integer
          example: '13'
        score:
          description: 'Средняя оценка'
          type: number
          format: float
          example: '3.5'
      type: object
    MemberReview:
      title: 'Сущность отзыва'
      required:
        - id
        - startDate
        - finishDate
        - hours
        - score
        - text
        - createdAt
        - company
        - project
        - competencies
      properties:
        id:
          description: Id
          type: integer
          example: 1
        startDate:
          description: 'Дата начала работ'
          type: string
          format: date
          example: '2023-01-01'
        finishDate:
          description: 'Дата окончания работ'
          type: string
          format: date
          example: '2023-02-02'
        hours:
          description: 'Количество потраченных часов'
          type: integer
          example: 48
        score:
          description: Оценка
          type: integer
          example: 5
        text:
          description: 'Текст отзыва'
          type: string
          example: 'Просто умничка'
        createdAt:
          description: 'Дата написания отзыва'
          type: string
          format: date
          example: '2023-03-03'
        company:
          $ref: '#/components/schemas/CompanyShort'
        project:
          $ref: '#/components/schemas/ProjectShort'
        competencies:
          $ref: '#/components/schemas/CompetencyList'
      type: object
    MemberReviewList:
      title: 'Список сущностей отзыва'
      type: array
      items:
        $ref: '#/components/schemas/MemberReview'
    MemberReviewShort:
      title: 'Сущность отзыва короткая'
      required:
        - id
        - score
        - createdAt
        - company
        - project
      properties:
        id:
          description: Id
          type: integer
          example: 1
        score:
          description: Оценка
          type: integer
          example: 5
        createdAt:
          description: 'Дата написания отзыва'
          type: string
          format: date
          example: '2023-03-03'
        company:
          $ref: '#/components/schemas/CompanyShort'
        project:
          $ref: '#/components/schemas/ProjectShort'
      type: object
    MemberReviewShortList:
      title: 'Список сущностей отзыва короткий'
      type: array
      items:
        $ref: '#/components/schemas/MemberReviewShort'
    ProjectFull:
      title: 'Проекта. Публичная информация'
      required:
        - id
        - name
        - applicationDate
        - startDate
        - finishDate
        - subjectAreas
        - type
        - partners
        - stages
        - reportPeriods
        - members
        - curatorId
        - managers
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Разработка модулей'
        applicationDate:
          description: 'Прием заявок до'
          type: string
          format: date
          example: '2022-12-20'
        startDate:
          description: 'Дата начала'
          type: string
          format: date
          example: '2023-01-10'
        finishDate:
          description: 'Дата завершения'
          type: string
          format: date
          example: '2023-02-10'
        subjectAreas:
          $ref: '#/components/schemas/SubjectAreaList'
        type:
          $ref: '#/components/schemas/ProjectType'
        view:
          $ref: '#/components/schemas/ProjectView'
        status:
          $ref: '#/components/schemas/ProjectStatus'
        description:
          description: 'Краткое описание'
          type: string
          example: 'Краткое описание'
        problem:
          description: 'Решаемые проблемы'
          type: string
          example: 'Решаемые проблемы'
        purpose:
          description: Цели
          type: string
          example: Цели
        task:
          description: Задачи
          type: string
          example: Задачи
        result:
          description: Результат
          type: string
          example: Результат
        whatWillGet:
          description: 'Что получит участник'
          type: string
          example: 'Что получит участник'
        isVisible:
          description: 'Видимость проекта'
          type: boolean
          example: true
        reasonRejection:
          description: 'Содержит недопустимые выражения'
          type: string
          example: 'Содержит недопустимые выражения'
        total:
          description: 'Итоги проекта'
          type: string
          example: 'Итоги проекта'
        report:
          description: url
          type: string
          example: 'https://storage.tusur.ru/files/155323/02.pdf'
        partners:
          $ref: '#/components/schemas/CompanyShortList'
        stages:
          $ref: '#/components/schemas/ProjectStageList'
        reportPeriods:
          $ref: '#/components/schemas/ProjectReportPeriodList'
        members:
          $ref: '#/components/schemas/MemberList'
        managers:
          $ref: '#/components/schemas/ContactList'
        curatorId:
          description: 'ID куратора'
          type: integer
          nullable: true
      type: object
    Project:
      title: 'Проект. Информация для каталога'
      required:
        - id
        - name
        - applicationDate
        - startDate
        - finishDate
        - duration
        - subjectAreas
        - type
        - view
        - status
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Разработка источников света'
        applicationDate:
          description: 'Прием заявок до'
          type: string
          format: date
          example: '2022-12-20'
        startDate:
          description: 'Дата начала'
          type: string
          format: date
          example: '2023-01-10'
        finishDate:
          description: 'Дата завершения'
          type: string
          format: date
          example: '2023-02-10'
        duration:
          description: 'Длительность в днях'
          type: string
          example: '74'
        subjectAreas:
          $ref: '#/components/schemas/SubjectAreaList'
        type:
          $ref: '#/components/schemas/ProjectType'
        view:
          $ref: '#/components/schemas/ProjectView'
        status:
          $ref: '#/components/schemas/ProjectStatus'
        company:
          $ref: '#/components/schemas/CompanyShort'
      type: object
    ProjectList:
      title: 'Список проектов для каталога'
      type: array
      items:
        $ref: '#/components/schemas/Project'
    ProjectManager:
      title: 'Менеджер проекта'
      required:
        - fio
        - position
        - participant
      properties:
        fio:
          description: ФИО
          type: string
          example: 'Шилова Данила Евгеньевич'
        position:
          description: Должность
          type: string
          example: 'Ген директор ООО Рога и Копыта'
        participant:
          description: 'Роль участника на проекте'
          type: string
          example: Руководитель
      type: object
    ProjectManagerList:
      title: 'Список менеджеров проекта'
      type: array
      items:
        $ref: '#/components/schemas/ProjectManager'
    ProjectPublic:
      title: 'Проекта. Публичная информация'
      required:
        - id
        - name
        - applicationDate
        - startDate
        - finishDate
        - subjectAreas
        - type
        - company
        - partners
        - stages
        - reportPeriods
        - members
        - managers
        - curatorId
        - roles
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Разработка модулей'
        applicationDate:
          description: 'Прием заявок до'
          type: string
          format: date
          example: '2022-12-20'
        startDate:
          description: 'Дата начала'
          type: string
          format: date
          example: '2023-01-10'
        finishDate:
          description: 'Дата завершения'
          type: string
          format: date
          example: '2023-02-10'
        subjectAreas:
          $ref: '#/components/schemas/SubjectAreaList'
        type:
          $ref: '#/components/schemas/ProjectType'
        view:
          $ref: '#/components/schemas/ProjectView'
        status:
          $ref: '#/components/schemas/ProjectStatus'
        description:
          description: 'Краткое описание'
          type: string
          example: 'Краткое описание'
        problem:
          description: 'Решаемые проблемы'
          type: string
          example: 'Решаемые проблемы'
        purpose:
          description: Цели
          type: string
          example: Цели
        task:
          description: Задачи
          type: string
          example: Задачи
        result:
          description: Результат
          type: string
          example: Результат
        whatWillGet:
          description: 'Что получит участник'
          type: string
          example: 'Что получит участник'
        company:
          $ref: '#/components/schemas/CompanyShort'
        partners:
          $ref: '#/components/schemas/CompanyShortList'
        stages:
          $ref: '#/components/schemas/ProjectStageList'
        reportPeriods:
          $ref: '#/components/schemas/ProjectReportPeriodList'
        members:
          $ref: '#/components/schemas/MemberList'
        managers:
          $ref: '#/components/schemas/ContactList'
        roles:
          $ref: '#/components/schemas/ProjectRoleList'
        curatorId:
          description: 'ID куратора'
          type: integer
          nullable: true
      type: object
    ProjectReportPeriod:
      title: 'Сущность Период сбора отчетов проекта'
      required:
        - id
        - name
        - startDate
        - finishDate
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Название 1'
        startDate:
          description: 'Дата начала'
          type: string
          format: date
          example: '2022-12-10'
        finishDate:
          description: 'Дата окончания'
          type: string
          format: date
          example: '2022-12-20'
        studentReports:
          $ref: '#/components/schemas/StudentReportList'
      type: object
    ProjectReportPeriodList:
      title: 'Список сущностей периодов сбора отчетов проекта'
      type: array
      items:
        $ref: '#/components/schemas/ProjectReportPeriod'
    ProjectReportPeriodShort:
      title: 'Сущность период сбора отчетов проекта краткий, без зависимых сущностей'
      required:
        - id
        - name
        - startDate
        - finishDate
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Название 1'
        startDate:
          description: 'Дата начала'
          type: string
          format: date
          example: '2022-12-10'
        finishDate:
          description: 'Дата окончания'
          type: string
          format: date
          example: '2022-12-20'
      type: object
    ProjectReportPeriodShortList:
      title: 'Список сущностей периодов сбора отчетов проекта краткий, без зависимых сущностей'
      type: array
      items:
        $ref: '#/components/schemas/ProjectReportPeriodShort'
    ProjectRole:
      title: 'Роль в проекте'
      required:
        - id
        - name
        - workload
        - workFormat
        - needCompetencies
        - willCompetencies
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          maxLength: 50
          example: 'Менеджер проекта'
        workload:
          description: 'Примерная загрузка'
          type: string
          example: 'Примерная загрузка'
        workFormat:
          description: 'Формат работы'
          type: string
          example: 'Гибкий график'
        needCompetencies:
          $ref: '#/components/schemas/CompetencyList'
        willCompetencies:
          $ref: '#/components/schemas/CompetencyList'
      type: object
    ProjectRoleList:
      title: 'Список ролей в проекте'
      type: array
      items:
        $ref: '#/components/schemas/ProjectRole'
    ProjectShort:
      title: 'Проект краткая информация'
      required:
        - id
        - name
        - isVisible
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Разработка модулей'
        isVisible:
          description: 'Публичная видимость'
          type: boolean
      type: object
    ProjectStage:
      title: 'Сущность Этапы проекта'
      required:
        - id
        - name
        - startDate
        - finishDate
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Название 1'
        startDate:
          description: 'Дата начала'
          type: string
          format: date
          example: '2022-12-10'
        finishDate:
          description: 'Дата окончания'
          type: string
          format: date
          example: '2022-12-20'
      type: object
    ProjectStageList:
      title: 'Список сущностей этапов проекта'
      type: array
      items:
        $ref: '#/components/schemas/ProjectStage'
      example:
        -
          id: 1
          name: Название1
          startDate: '2022-10-15'
          finishDate: '2022-10-20'
        -
          id: 2
          name: Название2
          startDate: '2022-10-21'
          finishDate: '2022-10-30'
    ProjectStatus:
      title: 'Информация о статусе проекта'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          example: 1
        name:
          description: Название
          type: string
          example: 'Идёт набор'
      type: object
    ProjectType:
      title: 'Информация о типе проекта'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          example: 1
        name:
          description: Название
          type: string
          example: Программный
      type: object
    ProjectView:
      title: 'Информация о виде проекта'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          enum:
            - 0
            - 1
            - 2
          example: 1
        name:
          description: Название
          type: string
          example: 'Цифровая академия'
      type: object
    Role:
      title: 'Сущность роли'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Менеджер проекта'
      type: object
    RoleList:
      title: 'Список сущностей ролей'
      type: array
      items:
        $ref: '#/components/schemas/Role'
      example:
        -
          id: 1
          name: 'Менеджер проекта'
        -
          id: 2
          name: Разработчик
    StudentReport:
      title: 'Сущность отчета студента'
      required:
        - filename
        - fileUrl
        - isAccepted
        - updatedAt
        - isExpired
        - projectReportPeriod
        - role
      properties:
        filename:
          description: 'Имя файла'
          type: string
          example: отчетМалиновской.pdf
        fileUrl:
          description: 'URL файла'
          type: string
          example: 'http://tusur-marketplace.local/student-report/12'
        isAccepted:
          description: 'Принят ли'
          type: boolean
        updatedAt:
          description: 'Дата обновления'
          type: string
          format: date
          example: '2023-03-10'
        isExpired:
          description: 'Просрочен ли'
          type: boolean
        project:
          $ref: '#/components/schemas/ProjectShort'
        projectReportPeriod:
          $ref: '#/components/schemas/ProjectReportPeriodShort'
        role:
          $ref: '#/components/schemas/Role'
      type: object
    StudentReportList:
      title: 'Список сущностей'
      type: array
      items:
        $ref: '#/components/schemas/StudentReport'
    StudentReportWaiting:
      title: 'Ожидающий отчеты студента для периодов'
      required:
        - project
        - projectPeriod
      properties:
        project:
          $ref: '#/components/schemas/ProjectShort'
        projectPeriod:
          $ref: '#/components/schemas/ProjectReportPeriodShort'
      type: object
    StudentReportWaitingList:
      title: 'Список сущностей'
      type: array
      items:
        $ref: '#/components/schemas/StudentReportWaiting'
    Student:
      title: 'Сущность студента'
      required:
        - contingentPersonId
        - competencies
        - subjectAreas
        - about
        - resume
        - resumePath
        - isFullFeedback
      properties:
        contingentPersonId:
          description: 'Id студента в системе ТУСУР'
          type: integer
          example: 1
        competencies:
          $ref: '#/components/schemas/CompetencyList'
        subjectAreas:
          $ref: '#/components/schemas/SubjectAreaList'
        about:
          description: 'Обо мне'
          type: string
          example: 'Обо мне'
        resume:
          description: 'Резюме Название файла'
          type: string
          example: 'Петров (резюме).pdf'
        resumePath:
          description: 'Резюме Url'
          type: string
          example: 'http://tusur-marketplace.local/storage/students/2023/01/n4WWRVHeZrpAFoyav.pdf'
          nullable: true
        isFullFeedback:
          description: 'Отображать полные отзывы обо мне'
          type: boolean
          example: true
      type: object
    StudentList:
      title: 'Список сущностей студента'
      type: array
      items:
        $ref: '#/components/schemas/Student'
    SubjectArea:
      title: 'Сущность предметной области'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Название 1'
      type: object
    SubjectAreaList:
      title: 'Список сущностей предметной области'
      type: array
      items:
        $ref: '#/components/schemas/SubjectArea'
      example:
        -
          id: 1
          name: Название1
        -
          id: 2
          name: Название2
    TypeActivity:
      title: 'Сущность вида деятельности'
      required:
        - id
        - name
      properties:
        id:
          description: Id
          type: integer
          example: 1
        name:
          description: Название
          type: string
          example: 'Название 1'
      type: object
    TypeActivityList:
      title: 'Список сущностей вида деятельности'
      type: array
      items:
        $ref: '#/components/schemas/TypeActivity'
      example:
        -
          id: 1
          name: Название1
        -
          id: 2
          name: Название2
  responses:
    NotFound:
      description: 'Not Found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    InternalServerError:
      description: 'Internal Server Error'
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
    BadRequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    UnprocessableContent:
      description: 'Unprocessable Content'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  -
    name: Bid
    description: 'Заявка на проект'
  -
    name: Company
    description: Компании
  -
    name: Competency
    description: Навыки
  -
    name: Invite
    description: Приглашения
  -
    name: MemberReview
    description: 'Отзывы об участниках'
  -
    name: Project
    description: Проекты
  -
    name: Role
    description: Роль
  -
    name: Student
    description: Студенты
  -
    name: StudentReport
    description: 'Отчет студента на проект'
  -
    name: SubjectArea
    description: 'Предметные области'
  -
    name: CompanySubscriber
    description: 'Подписка на компанию'
  -
    name: TypeActivity
    description: 'Виды деятельности'
